#!/usr/bin/env bash

get_child_pids() {
    _child_pids="$(ps --forest -o pid= -g $(ps -o sid= -p $1 2>/dev/null) 2>/dev/null)"
    echo -e "$1\n$(ps -o pid=,cmd= -p $_child_pids 2>/dev/null|sort -n|\
    sed "0,/$1/d" 2>/dev/null|grep -Pv '\d+ sleep \d+'|awk '{print$1}')"|sort -nu
}

try_kill() {
    ret=1
    if [ -n "$1" ]
        then
            for pid in $1
                do
                    trykillnum=1
                    while [[ -n "$pid" && -d "/proc/$pid" ]]
                        do
                            if [[ "$trykillnum" -le 3 ]]
                                then
                                    kill -2 $pid 2>/dev/null
                                    ret=$?
                                    sleep 0.05
                                else
                                    kill -9 $pid 2>/dev/null
                                    ret=$?
                                    wait $pid &>/dev/null
                                    wait_pid "$pid"
                            fi
                            trykillnum="$(( $trykillnum + 1 ))"
                    done
            done
    fi
    return $ret
}

wait_pid() {
    if [ -n "$1" ]
        then
            if [ "$UNLIM_WAIT" == 1 ]
                then
                    while [ -d "/proc/$1" ]; do sleep 0.1; done
                else
                    [ -n "$2" ] && \
                        timeout="$2"||
                        timeout="100"
                    waittime=1
                    while [[ -d "/proc/$1" && "$waittime" -le "$timeout" ]]
                        do
                            sleep 0.01
                            waittime="$(( $waittime + 1 ))"
                    done
            fi
    fi
}

killjobpids() { try_kill "$(get_child_pids "$execjobpid")" ; }

if [ -n "$EXECFL" ]
    then
        if [ -n "$1" ]
            then
                unset args
                for arg in "$@"
                    do
                        echo "$arg"|grep -Po '\s' &>/dev/null && \
                            arg="$(echo "$arg"|sed 's|.*|"&"|' 2>/dev/null)"
                        args+=("$arg")
                done
                flock -x "$EXECFL" echo "${args[@]}" > "$EXECFL" 2>/dev/null
            else
                flock -x "$EXECFL" cat > "$EXECFL" 2>/dev/null
        fi
        sleep 0.1
        execjobfl="$(ls -1t "$EXECFL."* 2>/dev/null|head -1|grep -Po "$EXECFL.\d+")"
        execjoboutfl="$execjobfl.o"
        execjobpid="$(ls "$execjobfl.p."* 2>/dev/null|cut -d '.' -f6)"
        trap 'killjobpids' EXIT SIGINT SIGTERM
        if [[ -n "$execjobpid" && -d "/proc/$execjobpid" ]]
            then tail --pid="$execjobpid" -q -f "$execjoboutfl" 2>/dev/null
            else cat "$execjoboutfl" 2>/dev/null
        fi
        execstat="$(ls "$execjobfl.s."* 2>/dev/null|cut -d '.' -f6)"
        [ -n "$execjobfl" ] && \
            rm -f "$execjobfl"* 2>/dev/null
        exit $execstat
    else
        echo "EXECFL is not configured!"
        exit 1
fi
