#!/usr/bin/env bash

RED='\033[1;91m'
BLUE='\033[1;94m'
GREEN='\033[1;92m'
YELLOW='\033[1;33m'
RESETCOLOR='\033[1;00m'

[ -f "$RIMENVFL" ] && \
    source "$RIMENVFL"

[[ ! "$RUNTTY" =~ tty|pts ]] && \
    NOT_TERM=1||NOT_TERM=0

[[ "$RIM_PORTABLE_HOME" == 1 && -d "$SYS_HOME" ]] && \
    HOME="$SYS_HOME"

HINTEG_DIR="$HOME/.local/share"
HINTEG_APPS_DIR="$HINTEG_DIR/applications"
ICONS_DIR='/usr/share/icons'
APPS_DIR='/usr/share/applications'

IGNORE_FILES=(
    'mimeinfo.cache'
    'icon-theme.cache'
)
INTEG_DIRS=(
    "$APPS_DIR"
    "$ICONS_DIR"/*.svg
    "$ICONS_DIR"/*.png
    "$ICONS_DIR/hicolor"
    '/usr/share/desktop-directories'
    '/etc/xdg/menus/applications-merged'
)
MIME_DIRS=(
    '/usr/share/mime/packages'
    '/usr/share/mime/inode'
    '/usr/share/mime/text'
    '/usr/share/mime/application'
    '/usr/share/mime/model'
    '/usr/share/mime/video'
    '/usr/share/mime/font'
    '/usr/share/mime/image'
    '/usr/share/mime/audio'
    '/usr/share/mime/multipart'
    '/usr/share/mime/x-content'
    '/usr/share/mime/message'
    '/usr/share/mime/chemical'
    '/usr/share/mime/x-epoc'
)

if [ -d "$RUNDINTEGDIR" ]
    then
        ACTINTEGFL="$RUNDINTEGDIR/act"
        ADDINTEGFL="$RUNDINTEGDIR/add"
        RMINTEGFL="$RUNDINTEGDIR/rm"
        LSINTEGFL="$RUNDINTEGDIR/ls"
fi

nocolor() { sed -r 's|\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]||g' ; }

info_msg() {
    if [ "$RIM_QUIET_MODE" != 1 ]
        then echo -e "${GREEN}[ INFO ][$(date +"%Y.%m.%d %T")]: $@ $RESETCOLOR"
            if [[ "$NOT_TERM" == 1 && "$RIM_NOTIFY" == 1 ]]
                then notify-send -a 'RunImage Info' "$(echo -e "$@"|nocolor)" 2>/dev/null &
            fi
    fi
}

error_msg() {
    echo -e "${RED}[ ERROR ][$(date +"%Y.%m.%d %T")]: $@ $RESETCOLOR"
    if [ "$NOT_TERM" == 1 ]
        then notify-send -a 'RunImage Error' "$(echo -e "$@"|nocolor)" 2>/dev/null &
    fi
}

lsapps() {
    local apps="$(grep -m1 '^Name=' -nr "$APPS_DIR" 2>/dev/null|\
                  sed 's|.*:Name=||g;s|.*|"&"|g'|sort -u)"
    [ -n "$apps" ] && cat -n<<<"$apps"
}

lsintegapps() {
    if [ -d "$RUNDINTEGDIR" ]
        then fifo_ls
        else
             local apps="$(grep -m1 '^Name=.* \[RunImage\]' -nr "$HINTEG_APPS_DIR"/*-rim.desktop 2>/dev/null|\
                        sed 's|.*:Name=||g;s| \[RunImage\]$||g;s|.*|"&"|g'|sort -u)"
             [ -n "$apps" ] && cat -n<<<"$apps"
    fi
}

find_fl() { find "$@" -type f 2>/dev/null|sort ; }

upd_ddb() { update-desktop-database -q "$HINTEG_APPS_DIR" &>/dev/null ; }

upd_mdb() { update-mime-database "$HINTEG_DIR/mime" &>/dev/null ; }

fifo_add() {
    echo a > "$ACTINTEGFL"
    echo "$1" > "$ADDINTEGFL"
}

fifo_ls() {
    echo l > "$ACTINTEGFL"
    cat "$LSINTEGFL"
}

fifo_rm() {
    echo r > "$ACTINTEGFL"
    echo "$1" > "$RMINTEGFL"
}

dinteg() {
    while read -r file
        do
            [[ ! "${IGNORE_FILES[@]}" =~ "$(basename "$file")" ]]||\
                continue
            [ "${file:0:1}" == '/' ]||\
                file="/${file}"
            if [[ -f "$file" || "$file" == "$RUNPIDDIR/dinteg/"* ]]
                then
                    unset postfix postfix_dir exec_args
                    if [ -d "$RUNDINTEGDIR" ]
                        then hinteg_dir="$RUNDINTEGDIR"
                        else
                            [[ "$file" == *'/menus/'* ]] && \
                                hinteg_dir="$HOME/.config"||\
                                hinteg_dir="$HINTEG_DIR"
                    fi
                    if [[ "$file" == "$RUNPIDDIR/dinteg/"* ]]
                        then
                            cp_mv=mv
                            postfix="$(sed "s|$RUNPIDDIR/dinteg/||g"<<<"$file")"
                        else
                            cp_mv=cp
                            postfix="$(cut -d'/' -f4-<<<"$file"|sed 's|.desktop$|-rim.desktop|i;s|.png$|-rim.png|i;s|.svg$|-rim.svg|i;s|.xml$|-rim.xml|i')"
                    fi
                    postfix_dir="$(dirname "$postfix")"
                    hinteg_file="${hinteg_dir}/${postfix}"
                    hinteg_file_dir="${hinteg_dir}/${postfix_dir}"
                    case "$act" in
                        a)
                            mkdir $verb -p "$hinteg_file_dir"
                            "$cp_mv" $verb -f "$file" "$hinteg_file"
                            if [[ "$hinteg_file" == *'.desktop' && "$file" != "$RUNPIDDIR/dinteg/"* ]]
                                then
                                    exec_args="env "
                                    [ -n "$RIM_OVERFS_ID" ] && \
                                    exec_args+="RIM_OVERFS_ID='$RIM_OVERFS_ID' "
                                    exec_args+="RIM_AUTORUN=0 "
                                    exec_args+="'$RUNSRC' "

                                    sed -i "s|^Icon.*|&-rim|g;s|^Name.*|& [RunImage]|g;s|^Exec=|Exec=$exec_args|g;/^TryExec/d;/^DBusActivatable/d" "$hinteg_file"
                                    chmod $verb +x "$hinteg_file"
                            fi
                            if [ -d "$RUNDINTEGDIR" ]
                                then fifo_add "$hinteg_file"
                            fi
                        ;;
                        r)
                            if [ -d "$RUNDINTEGDIR" ]
                                then fifo_rm "$hinteg_file"
                                else
                                    [ -f "$hinteg_file" ] && \
                                        rm $verb -f "$hinteg_file"
                            fi
                        ;;
                        *) return 1 ;;
                    esac
            fi
    done
}

print_help() {
    echo -e "[ Usage ]: rim-dinteg [OPTIONS] app app...

[ Options ]:
    -a, --add     [num|name|all|mime] Add applications to apps menu
    -h, --help                        Show this message
    -l, --list    [a|added]           List applications
    -m, --mime                        With MIME types (env: RIM_DINTEG_MIME=1)
    -v, --verbose                     Verbose output
    -r, --remove  [num|name|all|mime] Remove applications from apps menu"
    exit 1
}

unset act ret verb
while [[ $# -gt 0 ]]
    do
        case "$1" in
            -m|--mime   )   shift ; RIM_DINTEG_MIME=1 ;;
            -v|--verbose)   shift ; verb='-v' ;;
            -a|--add    )   shift ; act=a ;;
            -r|--remove )   shift ; act=r ;;
            -h|--help   )   print_help ;;
            -l|--list   )   shift
                            ret=1
                            case "$1" in
                                a|added) lsintegapps ;;
                                *) lsapps ;;
                            esac
                            if [ "$?" == 0 ]
                                then ret=0
                                else error_msg "No apps found!"
                            fi
                            exit $ret
                ;;
            -*) error_msg "Unknown parameter: ${BLUE}$1\n"; print_help ;;
            *) break ;;
        esac
done

if [ -n "$1" ]
    then
        case "$1" in
            hook) shift
                unset verb
                if [ "$RIM_DINTEG" == 1 ]
                    then dinteg
                    else echo "Desktop integration is disabled!"
                fi
            ;;
            all) shift
                [ "$RIM_DINTEG_MIME" == 1 ] && \
                    INTEG_DIRS+=("${MIME_DIRS[@]}")
                find_fl "${INTEG_DIRS[@]}"|dinteg
                upd_ddb
                if [ "$RIM_DINTEG_MIME" == 1 ]
                    then upd_mdb
                fi
            ;;
            mime) shift
                find_fl "${MIME_DIRS[@]}"|dinteg
                upd_mdb
            ;;
            *)  IFS=$'\n'
                app_list="$(case "$act" in
                    a) lsapps ;;
                    r) lsintegapps ;;
                esac)"
                for app in "$@"
                    do
                        (if [[ "$app" =~ ^[0-9]+$ ]]
                            then app_name="$(awk '($1 == "'$app'")'<<<"$app_list"|awk '{$1=""}1'|sed 's|"||g'|sed 's|^ ||g')"
                            else app_name="$app"
                        fi
                        integ_files=("$(grep -wm1 "^Name=$app_name$" -lr "$APPS_DIR" 2>/dev/null|head -1)")
                        if [ -n "$integ_files" ]
                            then
                                case "$act" in
                                    a) act_info='Add' ;;
                                    r) act_info='Remove' ;;
                                esac
                                info_msg "$act_info app: $app_name"
                                icon_name="$(grep -m1 "^Icon=" "$integ_files" 2>/dev/null|sed 's|^Icon=||')"
                                integ_files+=($(find_fl "$ICONS_DIR" -name "${icon_name}.*" 2>/dev/null))
                                for file in "${integ_files[@]}";do echo "$file";done|dinteg
                            else
                                error_msg "The app was not found: $([ "$app_name" ] && echo "$app_name"||echo "$app")"
                                exit 1
                        fi)
                done
            ;;
        esac
    else
        error_msg "Specify the name or number of the app!"
        print_help
fi
